{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0","program":"/Users/waqar/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=e4df08f6b5590216","-C","extra-filename=-e4df08f6b5590216","--out-dir","/Users/waqar/Exercism/rust/snake_game/target/rls/debug/deps","-L","dependency=/Users/waqar/Exercism/rust/snake_game/target/rls/debug/deps","--extern","cfg_if=/Users/waqar/Exercism/rust/snake_game/target/rls/debug/deps/libcfg_if-e5b59858104916b5.rmeta","--extern","const_fn=/Users/waqar/Exercism/rust/snake_game/target/rls/debug/deps/libconst_fn-ff8aa92a9cee0ba2.dylib","--extern","crossbeam_utils=/Users/waqar/Exercism/rust/snake_game/target/rls/debug/deps/libcrossbeam_utils-f373bcc61227e7eb.rmeta","--extern","lazy_static=/Users/waqar/Exercism/rust/snake_game/target/rls/debug/deps/liblazy_static-3013e27ea0e8d63b.rmeta","--extern","memoffset=/Users/waqar/Exercism/rust/snake_game/target/rls/debug/deps/libmemoffset-3b63eba4bbef0b9c.rmeta","--extern","scopeguard=/Users/waqar/Exercism/rust/snake_game/target/rls/debug/deps/libscopeguard-b57d018474a88d26.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/waqar/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/waqar/Exercism/rust/snake_game/target/rls/debug/deps/libcrossbeam_epoch-e4df08f6b5590216.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[13751330524958964136,1798091196814366911]},"crate_root":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src","external_crates":[{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[3729267342832231031,17347908593988979979]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","num":17,"id":{"name":"const_fn","disambiguator":[422015252465667496,7166160970335672706]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","num":18,"id":{"name":"crossbeam_utils","disambiguator":[11731347309702350474,10322268202054197508]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","num":19,"id":{"name":"lazy_static","disambiguator":[7064805322198458713,2909941048741555990]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","num":20,"id":{"name":"scopeguard","disambiguator":[12968520028712090458,6544575961472716627]}},{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","num":21,"id":{"name":"memoffset","disambiguator":[5674225479230393649,15522896594884263507]}}],"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3500,"byte_end":3509,"line_start":80,"line_end":80,"column_start":32,"column_end":41},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3511,"byte_end":3517,"line_start":80,"line_end":80,"column_start":43,"column_end":49},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3519,"byte_end":3537,"line_start":80,"line_end":80,"column_start":51,"column_end":69},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3539,"byte_end":3560,"line_start":80,"line_end":80,"column_start":71,"column_end":92},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3562,"byte_end":3567,"line_start":80,"line_end":80,"column_start":94,"column_end":99},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3569,"byte_end":3576,"line_start":80,"line_end":80,"column_start":101,"column_end":108},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3578,"byte_end":3584,"line_start":80,"line_end":80,"column_start":110,"column_end":116},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3621,"byte_end":3630,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3632,"byte_end":3643,"line_start":81,"line_end":81,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3676,"byte_end":3687,"line_start":82,"line_end":82,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3689,"byte_end":3694,"line_start":82,"line_end":82,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3802,"byte_end":3819,"line_start":89,"line_end":89,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":640},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3821,"byte_end":3830,"line_start":89,"line_end":89,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":638},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3832,"byte_end":3835,"line_start":89,"line_end":89,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":274},{"krate":0,"index":307},{"krate":0,"index":332},{"krate":0,"index":348},{"krate":0,"index":382},{"krate":0,"index":473},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":632},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2855,"byte_end":2926,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3120,"byte_end":3163,"line_start":63,"line_end":63,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7133839,"byte_end":7133857,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7133768,"byte_end":7133827,"line_start":28,"line_end":28,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":33},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7133987,"byte_end":7133994,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7133906,"byte_end":7133978,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134080,"byte_end":7134083,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134016,"byte_end":7134071,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134972,"byte_end":7134993,"line_start":57,"line_end":57,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134402,"byte_end":7134454,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134455,"byte_end":7134458,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134459,"byte_end":7134550,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134551,"byte_end":7134643,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134644,"byte_end":7134647,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134648,"byte_end":7134713,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134714,"byte_end":7134717,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134718,"byte_end":7134812,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134813,"byte_end":7134839,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134840,"byte_end":7134932,"line_start":55,"line_end":55,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134933,"byte_end":7134961,"line_start":56,"line_end":56,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7135059,"byte_end":7135066,"line_start":59,"line_end":59,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7135000,"byte_end":7135051,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7135284,"byte_end":7135291,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7135092,"byte_end":7135140,"line_start":61,"line_end":61,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7135145,"byte_end":7135148,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7135153,"byte_end":7135246,"line_start":63,"line_end":63,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7135251,"byte_end":7135276,"line_start":64,"line_end":64,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137599,"byte_end":7137608,"line_start":138,"line_end":138,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7136626,"byte_end":7136673,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7136674,"byte_end":7136677,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7136678,"byte_end":7136776,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7136777,"byte_end":7136872,"line_start":121,"line_end":121,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7136873,"byte_end":7136935,"line_start":122,"line_end":122,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7136936,"byte_end":7136939,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7136940,"byte_end":7137032,"line_start":124,"line_end":124,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137033,"byte_end":7137132,"line_start":125,"line_end":125,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137133,"byte_end":7137233,"line_start":126,"line_end":126,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137234,"byte_end":7137256,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137257,"byte_end":7137260,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137261,"byte_end":7137354,"line_start":129,"line_end":129,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137355,"byte_end":7137426,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137427,"byte_end":7137430,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137431,"byte_end":7137438,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137439,"byte_end":7137469,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137470,"byte_end":7137501,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137502,"byte_end":7137505,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137506,"byte_end":7137580,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137581,"byte_end":7137588,"line_start":137,"line_end":137,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":58},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137655,"byte_end":7137660,"line_start":140,"line_end":140,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137615,"byte_end":7137644,"line_start":139,"line_end":139,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137714,"byte_end":7137718,"line_start":143,"line_end":143,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137674,"byte_end":7137704,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137870,"byte_end":7137874,"line_start":150,"line_end":150,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137725,"byte_end":7137770,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137775,"byte_end":7137778,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137783,"byte_end":7137795,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137800,"byte_end":7137803,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137808,"byte_end":7137855,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138238,"byte_end":7138243,"line_start":159,"line_end":159,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137908,"byte_end":7137943,"line_start":152,"line_end":152,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137948,"byte_end":7137951,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137956,"byte_end":7137968,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137973,"byte_end":7137976,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7137981,"byte_end":7138057,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138062,"byte_end":7138130,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138135,"byte_end":7138223,"line_start":158,"line_end":158,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138642,"byte_end":7138651,"line_start":169,"line_end":169,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138278,"byte_end":7138321,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138326,"byte_end":7138329,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138334,"byte_end":7138346,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138351,"byte_end":7138354,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138359,"byte_end":7138435,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138440,"byte_end":7138508,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138513,"byte_end":7138603,"line_start":167,"line_end":167,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138608,"byte_end":7138627,"line_start":168,"line_end":168,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7139064,"byte_end":7139068,"line_start":179,"line_end":179,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138690,"byte_end":7138743,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138748,"byte_end":7138751,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138756,"byte_end":7138768,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138773,"byte_end":7138776,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138781,"byte_end":7138857,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138862,"byte_end":7138930,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7138935,"byte_end":7139025,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7139030,"byte_end":7139049,"line_start":178,"line_end":178,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142043,"byte_end":7142049,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7141525,"byte_end":7141589,"line_start":266,"line_end":266,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7141590,"byte_end":7141593,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7141594,"byte_end":7141692,"line_start":268,"line_end":268,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7141693,"byte_end":7141790,"line_start":269,"line_end":269,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7141791,"byte_end":7141862,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7141863,"byte_end":7141866,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7141867,"byte_end":7141947,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7141948,"byte_end":7141951,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7141952,"byte_end":7142031,"line_start":274,"line_end":274,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142535,"byte_end":7142538,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142302,"byte_end":7142384,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142389,"byte_end":7142392,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142397,"byte_end":7142411,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142416,"byte_end":7142419,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142424,"byte_end":7142431,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142436,"byte_end":7142468,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142473,"byte_end":7142476,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142481,"byte_end":7142511,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142516,"byte_end":7142523,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142882,"byte_end":7142886,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142641,"byte_end":7142723,"line_start":299,"line_end":299,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142728,"byte_end":7142731,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142736,"byte_end":7142750,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142755,"byte_end":7142758,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142763,"byte_end":7142770,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142775,"byte_end":7142807,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142812,"byte_end":7142815,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142820,"byte_end":7142858,"line_start":306,"line_end":306,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142863,"byte_end":7142870,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143435,"byte_end":7143439,"line_start":331,"line_end":331,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143385,"byte_end":7143417,"line_start":330,"line_end":330,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144024,"byte_end":7144028,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143566,"byte_end":7143611,"line_start":338,"line_end":338,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143616,"byte_end":7143619,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143624,"byte_end":7143714,"line_start":340,"line_end":340,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143719,"byte_end":7143733,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143738,"byte_end":7143741,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143746,"byte_end":7143760,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143765,"byte_end":7143768,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143773,"byte_end":7143780,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143785,"byte_end":7143834,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143839,"byte_end":7143883,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143888,"byte_end":7143891,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143896,"byte_end":7143926,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143931,"byte_end":7143961,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7143966,"byte_end":7144000,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144005,"byte_end":7144012,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145035,"byte_end":7145047,"line_start":378,"line_end":378,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144158,"byte_end":7144237,"line_start":357,"line_end":357,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144242,"byte_end":7144245,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144250,"byte_end":7144323,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144328,"byte_end":7144404,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144409,"byte_end":7144480,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144485,"byte_end":7144559,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144564,"byte_end":7144587,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144592,"byte_end":7144595,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144600,"byte_end":7144675,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144680,"byte_end":7144754,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144759,"byte_end":7144793,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144798,"byte_end":7144801,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144806,"byte_end":7144820,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144825,"byte_end":7144828,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144833,"byte_end":7144840,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144845,"byte_end":7144894,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144899,"byte_end":7144902,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144907,"byte_end":7144937,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144942,"byte_end":7144972,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7144977,"byte_end":7145011,"line_start":376,"line_end":376,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145016,"byte_end":7145023,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145655,"byte_end":7145660,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145167,"byte_end":7145232,"line_start":382,"line_end":382,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145237,"byte_end":7145240,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145245,"byte_end":7145335,"line_start":384,"line_end":384,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145340,"byte_end":7145354,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145359,"byte_end":7145362,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145367,"byte_end":7145381,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145386,"byte_end":7145389,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145394,"byte_end":7145401,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145406,"byte_end":7145455,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145460,"byte_end":7145504,"line_start":391,"line_end":391,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145509,"byte_end":7145512,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145517,"byte_end":7145547,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145552,"byte_end":7145588,"line_start":394,"line_end":394,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145593,"byte_end":7145631,"line_start":395,"line_end":395,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145636,"byte_end":7145643,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146310,"byte_end":7146314,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145767,"byte_end":7145855,"line_start":401,"line_end":401,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145860,"byte_end":7145873,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145878,"byte_end":7145881,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145886,"byte_end":7145976,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7145981,"byte_end":7145995,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146000,"byte_end":7146003,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146008,"byte_end":7146022,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146027,"byte_end":7146030,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146035,"byte_end":7146042,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146047,"byte_end":7146104,"line_start":410,"line_end":410,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146109,"byte_end":7146153,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146158,"byte_end":7146161,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146166,"byte_end":7146196,"line_start":413,"line_end":413,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146201,"byte_end":7146231,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146236,"byte_end":7146286,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146291,"byte_end":7146298,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147581,"byte_end":7147596,"line_start":445,"line_end":445,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146485,"byte_end":7146581,"line_start":421,"line_end":421,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146586,"byte_end":7146680,"line_start":422,"line_end":422,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146685,"byte_end":7146756,"line_start":423,"line_end":423,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146761,"byte_end":7146764,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146769,"byte_end":7146864,"line_start":425,"line_end":425,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146869,"byte_end":7146960,"line_start":426,"line_end":426,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146965,"byte_end":7146978,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146983,"byte_end":7146986,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7146991,"byte_end":7147076,"line_start":429,"line_end":429,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147081,"byte_end":7147112,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147117,"byte_end":7147120,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147125,"byte_end":7147139,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147144,"byte_end":7147147,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147152,"byte_end":7147159,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147164,"byte_end":7147228,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147233,"byte_end":7147277,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147282,"byte_end":7147285,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147290,"byte_end":7147320,"line_start":438,"line_end":438,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147325,"byte_end":7147328,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147333,"byte_end":7147363,"line_start":440,"line_end":440,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147368,"byte_end":7147405,"line_start":441,"line_end":441,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147410,"byte_end":7147480,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147485,"byte_end":7147557,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7147562,"byte_end":7147569,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7150065,"byte_end":7150085,"line_start":514,"line_end":514,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7148265,"byte_end":7148361,"line_start":468,"line_end":468,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7148366,"byte_end":7148460,"line_start":469,"line_end":469,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7148465,"byte_end":7148536,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7148541,"byte_end":7148544,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7148549,"byte_end":7148643,"line_start":472,"line_end":472,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7148648,"byte_end":7148743,"line_start":473,"line_end":473,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7148748,"byte_end":7148838,"line_start":474,"line_end":474,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7148843,"byte_end":7148927,"line_start":475,"line_end":475,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7148932,"byte_end":7148935,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7148940,"byte_end":7149025,"line_start":477,"line_end":477,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149030,"byte_end":7149061,"line_start":478,"line_end":478,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149066,"byte_end":7149069,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149074,"byte_end":7149122,"line_start":480,"line_end":480,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149127,"byte_end":7149130,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149135,"byte_end":7149149,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149154,"byte_end":7149157,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149162,"byte_end":7149169,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149174,"byte_end":7149238,"line_start":485,"line_end":485,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149243,"byte_end":7149287,"line_start":486,"line_end":486,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149292,"byte_end":7149295,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149300,"byte_end":7149330,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149335,"byte_end":7149365,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149370,"byte_end":7149373,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149378,"byte_end":7149413,"line_start":491,"line_end":491,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149418,"byte_end":7149458,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149463,"byte_end":7149473,"line_start":493,"line_end":493,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149478,"byte_end":7149541,"line_start":494,"line_end":494,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149546,"byte_end":7149568,"line_start":495,"line_end":495,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149573,"byte_end":7149597,"line_start":496,"line_end":496,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149602,"byte_end":7149624,"line_start":497,"line_end":497,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149629,"byte_end":7149642,"line_start":498,"line_end":498,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149647,"byte_end":7149672,"line_start":499,"line_end":499,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149677,"byte_end":7149711,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149716,"byte_end":7149746,"line_start":501,"line_end":501,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149751,"byte_end":7149764,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149769,"byte_end":7149778,"line_start":503,"line_end":503,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149783,"byte_end":7149788,"line_start":504,"line_end":504,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149793,"byte_end":7149796,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149801,"byte_end":7149842,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149847,"byte_end":7149857,"line_start":507,"line_end":507,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149862,"byte_end":7149937,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149942,"byte_end":7149969,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7149974,"byte_end":7150017,"line_start":510,"line_end":510,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7150022,"byte_end":7150031,"line_start":511,"line_end":511,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7150036,"byte_end":7150041,"line_start":512,"line_end":512,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7150046,"byte_end":7150053,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151490,"byte_end":7151499,"line_start":556,"line_end":556,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7150759,"byte_end":7150798,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7150803,"byte_end":7150806,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7150811,"byte_end":7150905,"line_start":539,"line_end":539,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7150910,"byte_end":7150966,"line_start":540,"line_end":540,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7150971,"byte_end":7150974,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7150979,"byte_end":7151069,"line_start":542,"line_end":542,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151074,"byte_end":7151088,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151093,"byte_end":7151096,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151101,"byte_end":7151115,"line_start":545,"line_end":545,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151120,"byte_end":7151123,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151128,"byte_end":7151135,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151140,"byte_end":7151197,"line_start":548,"line_end":548,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151202,"byte_end":7151246,"line_start":549,"line_end":549,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151251,"byte_end":7151254,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151259,"byte_end":7151319,"line_start":551,"line_end":551,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151324,"byte_end":7151354,"line_start":552,"line_end":552,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151359,"byte_end":7151414,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151419,"byte_end":7151466,"line_start":554,"line_end":554,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151471,"byte_end":7151478,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152398,"byte_end":7152406,"line_start":579,"line_end":579,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151670,"byte_end":7151708,"line_start":560,"line_end":560,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151713,"byte_end":7151716,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151721,"byte_end":7151814,"line_start":562,"line_end":562,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151819,"byte_end":7151875,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151880,"byte_end":7151883,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151888,"byte_end":7151978,"line_start":565,"line_end":565,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7151983,"byte_end":7151997,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152002,"byte_end":7152005,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152010,"byte_end":7152024,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152029,"byte_end":7152032,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152037,"byte_end":7152044,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152049,"byte_end":7152106,"line_start":571,"line_end":571,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152111,"byte_end":7152155,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152160,"byte_end":7152163,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152168,"byte_end":7152228,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152233,"byte_end":7152263,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152268,"byte_end":7152322,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152327,"byte_end":7152374,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152379,"byte_end":7152386,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153306,"byte_end":7153315,"line_start":602,"line_end":602,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152575,"byte_end":7152614,"line_start":583,"line_end":583,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152619,"byte_end":7152622,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152627,"byte_end":7152721,"line_start":585,"line_end":585,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152726,"byte_end":7152782,"line_start":586,"line_end":586,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152787,"byte_end":7152790,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152795,"byte_end":7152885,"line_start":588,"line_end":588,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152890,"byte_end":7152904,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152909,"byte_end":7152912,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152917,"byte_end":7152931,"line_start":591,"line_end":591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152936,"byte_end":7152939,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152944,"byte_end":7152951,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7152956,"byte_end":7153013,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153018,"byte_end":7153062,"line_start":595,"line_end":595,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153067,"byte_end":7153070,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153075,"byte_end":7153135,"line_start":597,"line_end":597,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153140,"byte_end":7153170,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153175,"byte_end":7153230,"line_start":599,"line_end":599,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153235,"byte_end":7153282,"line_start":600,"line_end":600,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153287,"byte_end":7153294,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154612,"byte_end":7154622,"line_start":640,"line_end":640,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153485,"byte_end":7153520,"line_start":606,"line_end":606,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153525,"byte_end":7153528,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153533,"byte_end":7153622,"line_start":608,"line_end":608,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153627,"byte_end":7153713,"line_start":609,"line_end":609,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153718,"byte_end":7153753,"line_start":610,"line_end":610,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153758,"byte_end":7153761,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153766,"byte_end":7153778,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153783,"byte_end":7153786,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153791,"byte_end":7153850,"line_start":614,"line_end":614,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153855,"byte_end":7153858,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153863,"byte_end":7153875,"line_start":616,"line_end":616,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153880,"byte_end":7153883,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153888,"byte_end":7153975,"line_start":618,"line_end":618,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7153980,"byte_end":7154013,"line_start":619,"line_end":619,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154018,"byte_end":7154021,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154026,"byte_end":7154040,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154045,"byte_end":7154048,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154053,"byte_end":7154064,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154069,"byte_end":7154088,"line_start":624,"line_end":624,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154093,"byte_end":7154127,"line_start":625,"line_end":625,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154132,"byte_end":7154158,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154163,"byte_end":7154190,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154195,"byte_end":7154200,"line_start":628,"line_end":628,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154205,"byte_end":7154208,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154213,"byte_end":7154246,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154251,"byte_end":7154279,"line_start":631,"line_end":631,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154284,"byte_end":7154378,"line_start":632,"line_end":632,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154383,"byte_end":7154430,"line_start":633,"line_end":633,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154435,"byte_end":7154455,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154460,"byte_end":7154539,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154544,"byte_end":7154557,"line_start":636,"line_end":636,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154562,"byte_end":7154571,"line_start":637,"line_end":637,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154576,"byte_end":7154581,"line_start":638,"line_end":638,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154586,"byte_end":7154593,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157253,"byte_end":7157260,"line_start":743,"line_end":743,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157190,"byte_end":7157242,"line_start":742,"line_end":742,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157352,"byte_end":7157362,"line_start":745,"line_end":745,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157290,"byte_end":7157344,"line_start":744,"line_end":744,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157669,"byte_end":7157679,"line_start":753,"line_end":753,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157384,"byte_end":7157448,"line_start":747,"line_end":747,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157453,"byte_end":7157456,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157461,"byte_end":7157473,"line_start":749,"line_end":749,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157478,"byte_end":7157481,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157486,"byte_end":7157581,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157586,"byte_end":7157654,"line_start":752,"line_end":752,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157945,"byte_end":7157950,"line_start":762,"line_end":762,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157705,"byte_end":7157740,"line_start":756,"line_end":756,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157741,"byte_end":7157744,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157745,"byte_end":7157787,"line_start":758,"line_end":758,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157788,"byte_end":7157791,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157792,"byte_end":7157890,"line_start":760,"line_end":760,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7157891,"byte_end":7157933,"line_start":761,"line_end":761,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159348,"byte_end":7159356,"line_start":813,"line_end":813,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158600,"byte_end":7158650,"line_start":791,"line_end":791,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158655,"byte_end":7158658,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158663,"byte_end":7158755,"line_start":793,"line_end":793,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158760,"byte_end":7158853,"line_start":794,"line_end":794,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158858,"byte_end":7158883,"line_start":795,"line_end":795,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158888,"byte_end":7158891,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158896,"byte_end":7158908,"line_start":797,"line_end":797,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158913,"byte_end":7158916,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158921,"byte_end":7158965,"line_start":799,"line_end":799,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158970,"byte_end":7158973,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158978,"byte_end":7158990,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158995,"byte_end":7158998,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159003,"byte_end":7159099,"line_start":803,"line_end":803,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159104,"byte_end":7159151,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159156,"byte_end":7159159,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159164,"byte_end":7159178,"line_start":806,"line_end":806,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159183,"byte_end":7159186,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159191,"byte_end":7159198,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159203,"byte_end":7159234,"line_start":809,"line_end":809,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159239,"byte_end":7159242,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159247,"byte_end":7159317,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159322,"byte_end":7159329,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159754,"byte_end":7159762,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159491,"byte_end":7159535,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159540,"byte_end":7159543,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159548,"byte_end":7159562,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159567,"byte_end":7159570,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159575,"byte_end":7159582,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159587,"byte_end":7159618,"line_start":824,"line_end":824,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159623,"byte_end":7159626,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159631,"byte_end":7159660,"line_start":826,"line_end":826,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159665,"byte_end":7159700,"line_start":827,"line_end":827,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159705,"byte_end":7159730,"line_start":828,"line_end":828,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159735,"byte_end":7159742,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160151,"byte_end":7160154,"line_start":845,"line_end":845,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7159921,"byte_end":7160002,"line_start":836,"line_end":836,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160007,"byte_end":7160010,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160015,"byte_end":7160029,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160034,"byte_end":7160037,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160042,"byte_end":7160049,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160054,"byte_end":7160085,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160090,"byte_end":7160093,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160098,"byte_end":7160127,"line_start":843,"line_end":843,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160132,"byte_end":7160139,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160493,"byte_end":7160497,"line_start":860,"line_end":860,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160255,"byte_end":7160336,"line_start":851,"line_end":851,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160341,"byte_end":7160344,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160349,"byte_end":7160363,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160368,"byte_end":7160371,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160376,"byte_end":7160383,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160388,"byte_end":7160419,"line_start":856,"line_end":856,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160424,"byte_end":7160427,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160432,"byte_end":7160469,"line_start":858,"line_end":858,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160474,"byte_end":7160481,"line_start":859,"line_end":859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160918,"byte_end":7160929,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160589,"byte_end":7160638,"line_start":864,"line_end":864,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160643,"byte_end":7160646,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160651,"byte_end":7160665,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160670,"byte_end":7160673,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160678,"byte_end":7160685,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160690,"byte_end":7160738,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160743,"byte_end":7160746,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160751,"byte_end":7160780,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160785,"byte_end":7160815,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160820,"byte_end":7160853,"line_start":873,"line_end":873,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160858,"byte_end":7160865,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160870,"byte_end":7160906,"line_start":875,"line_end":875,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161249,"byte_end":7161252,"line_start":889,"line_end":889,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161041,"byte_end":7161087,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161092,"byte_end":7161095,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161100,"byte_end":7161114,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161119,"byte_end":7161122,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161127,"byte_end":7161134,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161139,"byte_end":7161170,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161175,"byte_end":7161178,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161183,"byte_end":7161225,"line_start":887,"line_end":887,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161230,"byte_end":7161237,"line_start":888,"line_end":888,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161725,"byte_end":7161733,"line_start":907,"line_end":907,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161348,"byte_end":7161438,"line_start":894,"line_end":894,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161443,"byte_end":7161481,"line_start":895,"line_end":895,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161486,"byte_end":7161489,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161494,"byte_end":7161508,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161513,"byte_end":7161516,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161521,"byte_end":7161528,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161533,"byte_end":7161564,"line_start":900,"line_end":900,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161569,"byte_end":7161572,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161577,"byte_end":7161606,"line_start":902,"line_end":902,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161611,"byte_end":7161638,"line_start":903,"line_end":903,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161643,"byte_end":7161669,"line_start":904,"line_end":904,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161674,"byte_end":7161701,"line_start":905,"line_end":905,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161706,"byte_end":7161713,"line_start":906,"line_end":906,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164195,"byte_end":7164201,"line_start":1010,"line_end":1010,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163916,"byte_end":7163969,"line_start":1004,"line_end":1004,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163970,"byte_end":7163973,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163974,"byte_end":7164037,"line_start":1006,"line_end":1006,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164038,"byte_end":7164041,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164042,"byte_end":7164140,"line_start":1008,"line_end":1008,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164141,"byte_end":7164183,"line_start":1009,"line_end":1009,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165372,"byte_end":7165378,"line_start":1059,"line_end":1059,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164853,"byte_end":7164913,"line_start":1042,"line_end":1042,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164918,"byte_end":7164921,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164926,"byte_end":7164940,"line_start":1044,"line_end":1044,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164945,"byte_end":7164948,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164953,"byte_end":7164960,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164965,"byte_end":7165021,"line_start":1047,"line_end":1047,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165026,"byte_end":7165070,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165075,"byte_end":7165078,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165083,"byte_end":7165112,"line_start":1050,"line_end":1050,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165117,"byte_end":7165147,"line_start":1051,"line_end":1051,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165152,"byte_end":7165180,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165185,"byte_end":7165188,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165193,"byte_end":7165223,"line_start":1054,"line_end":1054,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165228,"byte_end":7165262,"line_start":1055,"line_end":1055,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165267,"byte_end":7165299,"line_start":1056,"line_end":1056,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165304,"byte_end":7165311,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165316,"byte_end":7165360,"line_start":1058,"line_end":1058,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165755,"byte_end":7165759,"line_start":1076,"line_end":1076,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165539,"byte_end":7165570,"line_start":1066,"line_end":1066,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165575,"byte_end":7165578,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165583,"byte_end":7165597,"line_start":1068,"line_end":1068,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165602,"byte_end":7165605,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165610,"byte_end":7165617,"line_start":1070,"line_end":1070,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165622,"byte_end":7165654,"line_start":1071,"line_end":1071,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165659,"byte_end":7165662,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165667,"byte_end":7165701,"line_start":1073,"line_end":1073,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165706,"byte_end":7165731,"line_start":1074,"line_end":1074,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165736,"byte_end":7165743,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166365,"byte_end":7166372,"line_start":1098,"line_end":1098,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165874,"byte_end":7165916,"line_start":1083,"line_end":1083,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165921,"byte_end":7165924,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165929,"byte_end":7165943,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165948,"byte_end":7165951,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165956,"byte_end":7165963,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165968,"byte_end":7166024,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166029,"byte_end":7166073,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166078,"byte_end":7166081,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166086,"byte_end":7166113,"line_start":1091,"line_end":1091,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166118,"byte_end":7166148,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166153,"byte_end":7166198,"line_start":1093,"line_end":1093,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166203,"byte_end":7166241,"line_start":1094,"line_end":1094,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166246,"byte_end":7166292,"line_start":1095,"line_end":1095,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166297,"byte_end":7166304,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166309,"byte_end":7166353,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167746,"byte_end":7167751,"line_start":1136,"line_end":1136,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166472,"byte_end":7166501,"line_start":1103,"line_end":1103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166506,"byte_end":7166509,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166514,"byte_end":7166592,"line_start":1105,"line_end":1105,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166597,"byte_end":7166600,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166605,"byte_end":7166617,"line_start":1107,"line_end":1107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166622,"byte_end":7166625,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166630,"byte_end":7166715,"line_start":1109,"line_end":1109,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166720,"byte_end":7166723,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166728,"byte_end":7166819,"line_start":1111,"line_end":1111,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166824,"byte_end":7166873,"line_start":1112,"line_end":1112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166878,"byte_end":7166881,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166886,"byte_end":7166958,"line_start":1114,"line_end":1114,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7166963,"byte_end":7167038,"line_start":1115,"line_end":1115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167043,"byte_end":7167046,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167051,"byte_end":7167144,"line_start":1117,"line_end":1117,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167149,"byte_end":7167242,"line_start":1118,"line_end":1118,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167247,"byte_end":7167285,"line_start":1119,"line_end":1119,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167290,"byte_end":7167293,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167298,"byte_end":7167312,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167317,"byte_end":7167320,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167325,"byte_end":7167332,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167337,"byte_end":7167386,"line_start":1124,"line_end":1124,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167391,"byte_end":7167435,"line_start":1125,"line_end":1125,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167440,"byte_end":7167443,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167448,"byte_end":7167478,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167483,"byte_end":7167513,"line_start":1128,"line_end":1128,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167518,"byte_end":7167552,"line_start":1129,"line_end":1129,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167557,"byte_end":7167569,"line_start":1130,"line_end":1130,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167574,"byte_end":7167611,"line_start":1131,"line_end":1131,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167616,"byte_end":7167621,"line_start":1132,"line_end":1132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167626,"byte_end":7167633,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167638,"byte_end":7167682,"line_start":1134,"line_end":1134,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167687,"byte_end":7167727,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169062,"byte_end":7169071,"line_start":1178,"line_end":1178,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167857,"byte_end":7167886,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167891,"byte_end":7167894,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167899,"byte_end":7167985,"line_start":1143,"line_end":1143,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167990,"byte_end":7167993,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7167998,"byte_end":7168010,"line_start":1145,"line_end":1145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168015,"byte_end":7168018,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168023,"byte_end":7168118,"line_start":1147,"line_end":1147,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168123,"byte_end":7168160,"line_start":1148,"line_end":1148,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168165,"byte_end":7168168,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168173,"byte_end":7168262,"line_start":1150,"line_end":1150,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168267,"byte_end":7168270,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168275,"byte_end":7168349,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168354,"byte_end":7168357,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168362,"byte_end":7168376,"line_start":1154,"line_end":1154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168381,"byte_end":7168384,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168389,"byte_end":7168396,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168401,"byte_end":7168450,"line_start":1157,"line_end":1157,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168455,"byte_end":7168499,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168504,"byte_end":7168507,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168512,"byte_end":7168554,"line_start":1160,"line_end":1160,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168559,"byte_end":7168589,"line_start":1161,"line_end":1161,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168594,"byte_end":7168597,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168602,"byte_end":7168640,"line_start":1163,"line_end":1163,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168645,"byte_end":7168657,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168662,"byte_end":7168692,"line_start":1165,"line_end":1165,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168697,"byte_end":7168727,"line_start":1166,"line_end":1166,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168732,"byte_end":7168773,"line_start":1167,"line_end":1167,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168778,"byte_end":7168796,"line_start":1168,"line_end":1168,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168801,"byte_end":7168845,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168850,"byte_end":7168855,"line_start":1170,"line_end":1170,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168860,"byte_end":7168863,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168868,"byte_end":7168902,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168907,"byte_end":7168919,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168924,"byte_end":7168976,"line_start":1174,"line_end":1174,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168981,"byte_end":7168986,"line_start":1175,"line_end":1175,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7168991,"byte_end":7168998,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169003,"byte_end":7169043,"line_start":1177,"line_end":1177,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170453,"byte_end":7170459,"line_start":1215,"line_end":1215,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169189,"byte_end":7169229,"line_start":1183,"line_end":1183,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169234,"byte_end":7169237,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169242,"byte_end":7169337,"line_start":1185,"line_end":1185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169342,"byte_end":7169345,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169350,"byte_end":7169362,"line_start":1187,"line_end":1187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169367,"byte_end":7169370,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169375,"byte_end":7169460,"line_start":1189,"line_end":1189,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169465,"byte_end":7169468,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169473,"byte_end":7169564,"line_start":1191,"line_end":1191,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169569,"byte_end":7169618,"line_start":1192,"line_end":1192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169623,"byte_end":7169626,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169631,"byte_end":7169703,"line_start":1194,"line_end":1194,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169708,"byte_end":7169783,"line_start":1195,"line_end":1195,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169788,"byte_end":7169791,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169796,"byte_end":7169889,"line_start":1197,"line_end":1197,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169894,"byte_end":7169987,"line_start":1198,"line_end":1198,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7169992,"byte_end":7170030,"line_start":1199,"line_end":1199,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170035,"byte_end":7170038,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170043,"byte_end":7170057,"line_start":1201,"line_end":1201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170062,"byte_end":7170065,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170070,"byte_end":7170077,"line_start":1203,"line_end":1203,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170082,"byte_end":7170131,"line_start":1204,"line_end":1204,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170136,"byte_end":7170180,"line_start":1205,"line_end":1205,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170185,"byte_end":7170188,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170193,"byte_end":7170223,"line_start":1207,"line_end":1207,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170228,"byte_end":7170258,"line_start":1208,"line_end":1208,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170263,"byte_end":7170297,"line_start":1209,"line_end":1209,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170302,"byte_end":7170314,"line_start":1210,"line_end":1210,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170319,"byte_end":7170363,"line_start":1211,"line_end":1211,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170368,"byte_end":7170373,"line_start":1212,"line_end":1212,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170378,"byte_end":7170385,"line_start":1213,"line_end":1213,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170390,"byte_end":7170434,"line_start":1214,"line_end":1214,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171319,"byte_end":7171329,"line_start":1248,"line_end":1248,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170649,"byte_end":7170684,"line_start":1224,"line_end":1224,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170689,"byte_end":7170692,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170697,"byte_end":7170709,"line_start":1226,"line_end":1226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170714,"byte_end":7170717,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170722,"byte_end":7170781,"line_start":1228,"line_end":1228,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170786,"byte_end":7170789,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170794,"byte_end":7170806,"line_start":1230,"line_end":1230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170811,"byte_end":7170814,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170819,"byte_end":7170906,"line_start":1232,"line_end":1232,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170911,"byte_end":7170944,"line_start":1233,"line_end":1233,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170949,"byte_end":7170952,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170957,"byte_end":7170971,"line_start":1235,"line_end":1235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170976,"byte_end":7170979,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170984,"byte_end":7170991,"line_start":1237,"line_end":1237,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7170996,"byte_end":7171045,"line_start":1238,"line_end":1238,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171050,"byte_end":7171094,"line_start":1239,"line_end":1239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171099,"byte_end":7171102,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171107,"byte_end":7171137,"line_start":1241,"line_end":1241,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171142,"byte_end":7171154,"line_start":1242,"line_end":1242,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171159,"byte_end":7171201,"line_start":1243,"line_end":1243,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171206,"byte_end":7171244,"line_start":1244,"line_end":1244,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171249,"byte_end":7171278,"line_start":1245,"line_end":1245,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171283,"byte_end":7171288,"line_start":1246,"line_end":1246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171293,"byte_end":7171300,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171938,"byte_end":7171941,"line_start":1267,"line_end":1267,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171481,"byte_end":7171527,"line_start":1253,"line_end":1253,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171532,"byte_end":7171535,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171540,"byte_end":7171554,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171559,"byte_end":7171562,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171567,"byte_end":7171574,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171579,"byte_end":7171635,"line_start":1258,"line_end":1258,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171640,"byte_end":7171684,"line_start":1259,"line_end":1259,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171689,"byte_end":7171692,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171697,"byte_end":7171759,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171764,"byte_end":7171794,"line_start":1262,"line_end":1262,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171799,"byte_end":7171833,"line_start":1263,"line_end":1263,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171838,"byte_end":7171865,"line_start":1264,"line_end":1264,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171870,"byte_end":7171877,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7171882,"byte_end":7171926,"line_start":1266,"line_end":1266,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172664,"byte_end":7172672,"line_start":1291,"line_end":1291,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172037,"byte_end":7172127,"line_start":1272,"line_end":1272,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172132,"byte_end":7172170,"line_start":1273,"line_end":1273,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172175,"byte_end":7172178,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172183,"byte_end":7172197,"line_start":1275,"line_end":1275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172202,"byte_end":7172205,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172210,"byte_end":7172217,"line_start":1277,"line_end":1277,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172222,"byte_end":7172271,"line_start":1278,"line_end":1278,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172276,"byte_end":7172320,"line_start":1279,"line_end":1279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172325,"byte_end":7172328,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172333,"byte_end":7172363,"line_start":1281,"line_end":1281,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172368,"byte_end":7172398,"line_start":1282,"line_end":1282,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172403,"byte_end":7172438,"line_start":1283,"line_end":1283,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172443,"byte_end":7172471,"line_start":1284,"line_end":1284,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172476,"byte_end":7172479,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172484,"byte_end":7172512,"line_start":1286,"line_end":1286,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172517,"byte_end":7172545,"line_start":1287,"line_end":1287,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172550,"byte_end":7172591,"line_start":1288,"line_end":1288,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172596,"byte_end":7172603,"line_start":1289,"line_end":1289,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172608,"byte_end":7172652,"line_start":1290,"line_end":1290,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175183,"byte_end":7175192,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":282}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175134,"byte_end":7175171,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175499,"byte_end":7175502,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175459,"byte_end":7175487,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175607,"byte_end":7175615,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175550,"byte_end":7175595,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176283,"byte_end":7176294,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":298}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176235,"byte_end":7176271,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176405,"byte_end":7176408,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176359,"byte_end":7176379,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176384,"byte_end":7176393,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176546,"byte_end":7176555,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176477,"byte_end":7176520,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176525,"byte_end":7176534,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176711,"byte_end":7176720,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176629,"byte_end":7176685,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176690,"byte_end":7176699,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195608,"byte_end":7195613,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":357}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7193892,"byte_end":7193941,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7193942,"byte_end":7193945,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7193946,"byte_end":7193959,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7193960,"byte_end":7193963,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7193964,"byte_end":7194043,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194044,"byte_end":7194047,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194048,"byte_end":7194055,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194056,"byte_end":7194089,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194090,"byte_end":7194093,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194094,"byte_end":7194192,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194193,"byte_end":7194285,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194286,"byte_end":7194316,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194317,"byte_end":7194324,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194325,"byte_end":7194328,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194329,"byte_end":7194405,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194406,"byte_end":7194409,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194410,"byte_end":7194437,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194438,"byte_end":7194441,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194442,"byte_end":7194529,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194530,"byte_end":7194546,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194547,"byte_end":7194550,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194551,"byte_end":7194558,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194559,"byte_end":7194608,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194609,"byte_end":7194653,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194654,"byte_end":7194657,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194658,"byte_end":7194696,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194697,"byte_end":7194726,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194727,"byte_end":7194730,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194731,"byte_end":7194761,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194762,"byte_end":7194792,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194793,"byte_end":7194796,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194797,"byte_end":7194871,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194872,"byte_end":7194906,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194907,"byte_end":7194910,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194911,"byte_end":7194962,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7194963,"byte_end":7195009,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195010,"byte_end":7195053,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195054,"byte_end":7195059,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195060,"byte_end":7195067,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195068,"byte_end":7195071,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195072,"byte_end":7195093,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195094,"byte_end":7195097,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195098,"byte_end":7195193,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195194,"byte_end":7195292,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195293,"byte_end":7195312,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195313,"byte_end":7195316,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195317,"byte_end":7195324,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195325,"byte_end":7195358,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195359,"byte_end":7195362,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195363,"byte_end":7195393,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195394,"byte_end":7195424,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195425,"byte_end":7195457,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195458,"byte_end":7195475,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195476,"byte_end":7195508,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195509,"byte_end":7195526,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195527,"byte_end":7195560,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195561,"byte_end":7195568,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195569,"byte_end":7195572,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195573,"byte_end":7195596,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196588,"byte_end":7196593,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195672,"byte_end":7195761,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195766,"byte_end":7195791,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195796,"byte_end":7195799,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195804,"byte_end":7195897,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195902,"byte_end":7195990,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195995,"byte_end":7196085,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196090,"byte_end":7196130,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196135,"byte_end":7196138,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196143,"byte_end":7196233,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196238,"byte_end":7196329,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196334,"byte_end":7196421,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196426,"byte_end":7196446,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196451,"byte_end":7196454,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196459,"byte_end":7196546,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196551,"byte_end":7196576,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200893,"byte_end":7200908,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196757,"byte_end":7196846,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196851,"byte_end":7196876,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196881,"byte_end":7196884,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196889,"byte_end":7196982,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7196987,"byte_end":7197075,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197080,"byte_end":7197170,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197175,"byte_end":7197215,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197220,"byte_end":7197223,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197228,"byte_end":7197318,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197323,"byte_end":7197414,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197419,"byte_end":7197506,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197511,"byte_end":7197531,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197536,"byte_end":7197539,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197544,"byte_end":7197631,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197636,"byte_end":7197661,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197666,"byte_end":7197669,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197674,"byte_end":7197686,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197691,"byte_end":7197694,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197699,"byte_end":7197791,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197796,"byte_end":7197883,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197888,"byte_end":7197900,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197905,"byte_end":7197908,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197913,"byte_end":7197920,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197925,"byte_end":7197958,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197963,"byte_end":7197966,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7197971,"byte_end":7198001,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198006,"byte_end":7198033,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198038,"byte_end":7198050,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198055,"byte_end":7198130,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198135,"byte_end":7198174,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198179,"byte_end":7198215,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198220,"byte_end":7198231,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198236,"byte_end":7198241,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198246,"byte_end":7198253,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198258,"byte_end":7198261,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198266,"byte_end":7198360,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198365,"byte_end":7198396,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198401,"byte_end":7198404,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198409,"byte_end":7198504,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198509,"byte_end":7198601,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198606,"byte_end":7198695,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198700,"byte_end":7198703,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198708,"byte_end":7198721,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198726,"byte_end":7198779,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198784,"byte_end":7198866,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198871,"byte_end":7198878,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198883,"byte_end":7198886,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198891,"byte_end":7198984,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7198989,"byte_end":7199084,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199089,"byte_end":7199149,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199154,"byte_end":7199157,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199162,"byte_end":7199176,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199181,"byte_end":7199184,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199189,"byte_end":7199275,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199280,"byte_end":7199374,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199379,"byte_end":7199475,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199480,"byte_end":7199572,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199577,"byte_end":7199633,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199638,"byte_end":7199641,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199646,"byte_end":7199653,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199658,"byte_end":7199714,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199719,"byte_end":7199763,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199768,"byte_end":7199771,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199776,"byte_end":7199807,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199812,"byte_end":7199815,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199820,"byte_end":7199897,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199902,"byte_end":7199933,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199938,"byte_end":7199941,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199946,"byte_end":7199976,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7199981,"byte_end":7200011,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200016,"byte_end":7200019,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200024,"byte_end":7200101,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200106,"byte_end":7200178,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200183,"byte_end":7200186,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200191,"byte_end":7200212,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200217,"byte_end":7200277,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200282,"byte_end":7200364,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200369,"byte_end":7200385,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200390,"byte_end":7200469,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200474,"byte_end":7200517,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200522,"byte_end":7200590,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200595,"byte_end":7200687,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200692,"byte_end":7200776,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200781,"byte_end":7200818,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200823,"byte_end":7200838,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200843,"byte_end":7200852,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200857,"byte_end":7200862,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7200867,"byte_end":7200874,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204495,"byte_end":7204508,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201147,"byte_end":7201240,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201245,"byte_end":7201297,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201302,"byte_end":7201305,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201310,"byte_end":7201403,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201408,"byte_end":7201498,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201503,"byte_end":7201592,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201597,"byte_end":7201651,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201656,"byte_end":7201659,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201664,"byte_end":7201757,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201762,"byte_end":7201855,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201860,"byte_end":7201953,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201958,"byte_end":7201989,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7201994,"byte_end":7201997,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202002,"byte_end":7202091,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202096,"byte_end":7202121,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202126,"byte_end":7202129,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202134,"byte_end":7202146,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202151,"byte_end":7202154,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202159,"byte_end":7202252,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202257,"byte_end":7202290,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202295,"byte_end":7202298,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202303,"byte_end":7202398,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202403,"byte_end":7202441,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202446,"byte_end":7202449,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202454,"byte_end":7202549,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202554,"byte_end":7202646,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202651,"byte_end":7202740,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202745,"byte_end":7202748,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202753,"byte_end":7202766,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202771,"byte_end":7202824,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202829,"byte_end":7202888,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202893,"byte_end":7202900,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202905,"byte_end":7202908,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7202913,"byte_end":7203007,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203012,"byte_end":7203099,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203104,"byte_end":7203164,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203169,"byte_end":7203172,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203177,"byte_end":7203191,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203196,"byte_end":7203199,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203204,"byte_end":7203290,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203295,"byte_end":7203389,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203394,"byte_end":7203490,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203495,"byte_end":7203587,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203592,"byte_end":7203648,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203653,"byte_end":7203656,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203661,"byte_end":7203668,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203673,"byte_end":7203729,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203734,"byte_end":7203778,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203783,"byte_end":7203786,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203791,"byte_end":7203822,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203827,"byte_end":7203830,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203835,"byte_end":7203912,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203917,"byte_end":7203948,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203953,"byte_end":7203956,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203961,"byte_end":7203991,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7203996,"byte_end":7204026,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204031,"byte_end":7204034,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204039,"byte_end":7204116,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204121,"byte_end":7204193,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204198,"byte_end":7204201,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204206,"byte_end":7204227,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204232,"byte_end":7204292,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204297,"byte_end":7204379,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204384,"byte_end":7204400,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204405,"byte_end":7204440,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204445,"byte_end":7204454,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204459,"byte_end":7204464,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204469,"byte_end":7204476,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205393,"byte_end":7205398,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204608,"byte_end":7204703,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204708,"byte_end":7204725,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204730,"byte_end":7204733,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204738,"byte_end":7204832,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204837,"byte_end":7204929,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7204934,"byte_end":7205002,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205007,"byte_end":7205010,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205015,"byte_end":7205107,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205112,"byte_end":7205115,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205120,"byte_end":7205134,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205139,"byte_end":7205142,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205147,"byte_end":7205154,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205159,"byte_end":7205192,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205197,"byte_end":7205200,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205205,"byte_end":7205235,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205240,"byte_end":7205265,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205270,"byte_end":7205334,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205339,"byte_end":7205346,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205351,"byte_end":7205369,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205374,"byte_end":7205381,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206560,"byte_end":7206565,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205522,"byte_end":7205573,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205578,"byte_end":7205581,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205586,"byte_end":7205676,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205681,"byte_end":7205775,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205780,"byte_end":7205874,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205879,"byte_end":7205931,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205936,"byte_end":7205939,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7205944,"byte_end":7206037,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206042,"byte_end":7206045,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206050,"byte_end":7206064,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206069,"byte_end":7206072,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206077,"byte_end":7206084,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206089,"byte_end":7206138,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206143,"byte_end":7206187,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206192,"byte_end":7206195,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206200,"byte_end":7206229,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206234,"byte_end":7206267,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206272,"byte_end":7206277,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206282,"byte_end":7206321,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206326,"byte_end":7206380,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206385,"byte_end":7206390,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206395,"byte_end":7206413,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206418,"byte_end":7206423,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206428,"byte_end":7206467,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206472,"byte_end":7206526,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206531,"byte_end":7206536,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206541,"byte_end":7206548,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207892,"byte_end":7207903,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206689,"byte_end":7206780,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206785,"byte_end":7206788,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206793,"byte_end":7206884,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206889,"byte_end":7206985,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7206990,"byte_end":7207084,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207089,"byte_end":7207108,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207113,"byte_end":7207116,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207121,"byte_end":7207215,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207220,"byte_end":7207262,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207267,"byte_end":7207270,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207275,"byte_end":7207289,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207294,"byte_end":7207297,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207302,"byte_end":7207309,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207314,"byte_end":7207363,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207368,"byte_end":7207412,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207417,"byte_end":7207437,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207442,"byte_end":7207470,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207475,"byte_end":7207478,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207483,"byte_end":7207512,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207517,"byte_end":7207550,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207555,"byte_end":7207560,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207565,"byte_end":7207604,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207609,"byte_end":7207663,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207668,"byte_end":7207673,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207678,"byte_end":7207745,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207750,"byte_end":7207755,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207760,"byte_end":7207799,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207804,"byte_end":7207858,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207863,"byte_end":7207868,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7207873,"byte_end":7207880,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209049,"byte_end":7209058,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208508,"byte_end":7208563,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208568,"byte_end":7208571,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208576,"byte_end":7208651,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208656,"byte_end":7208706,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208711,"byte_end":7208714,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208719,"byte_end":7208803,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208808,"byte_end":7208811,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208816,"byte_end":7208830,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208835,"byte_end":7208838,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208843,"byte_end":7208850,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208855,"byte_end":7208888,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208893,"byte_end":7208896,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208901,"byte_end":7208931,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208936,"byte_end":7208966,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7208971,"byte_end":7209025,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209030,"byte_end":7209037,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":380},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212357,"byte_end":7212368,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209468,"byte_end":7209555,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209556,"byte_end":7209559,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209560,"byte_end":7209655,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209656,"byte_end":7209745,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209746,"byte_end":7209749,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209750,"byte_end":7209843,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209844,"byte_end":7209881,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209882,"byte_end":7209885,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209886,"byte_end":7209982,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209983,"byte_end":7209986,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209987,"byte_end":7209999,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210000,"byte_end":7210003,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210004,"byte_end":7210094,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210095,"byte_end":7210162,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210163,"byte_end":7210166,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210167,"byte_end":7210181,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210182,"byte_end":7210185,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210186,"byte_end":7210193,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210194,"byte_end":7210243,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210244,"byte_end":7210289,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210290,"byte_end":7210293,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210294,"byte_end":7210321,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210322,"byte_end":7210325,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210326,"byte_end":7210338,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210339,"byte_end":7210394,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210395,"byte_end":7210441,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210442,"byte_end":7210445,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210446,"byte_end":7210520,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210521,"byte_end":7210571,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210572,"byte_end":7210575,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210576,"byte_end":7210605,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210606,"byte_end":7210662,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210663,"byte_end":7210674,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210675,"byte_end":7210678,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210679,"byte_end":7210760,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210761,"byte_end":7210766,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210767,"byte_end":7210774,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210775,"byte_end":7210778,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210779,"byte_end":7210873,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210874,"byte_end":7210877,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210878,"byte_end":7210972,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7210973,"byte_end":7211058,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211059,"byte_end":7211062,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211063,"byte_end":7211162,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211163,"byte_end":7211261,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211262,"byte_end":7211282,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211283,"byte_end":7211286,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211287,"byte_end":7211294,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211295,"byte_end":7211344,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211345,"byte_end":7211376,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211377,"byte_end":7211422,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211423,"byte_end":7211426,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211427,"byte_end":7211448,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211449,"byte_end":7211479,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211480,"byte_end":7211485,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211486,"byte_end":7211489,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211490,"byte_end":7211510,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211511,"byte_end":7211541,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211542,"byte_end":7211572,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211573,"byte_end":7211578,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211579,"byte_end":7211582,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211583,"byte_end":7211614,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211615,"byte_end":7211643,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211644,"byte_end":7211664,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211665,"byte_end":7211701,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211702,"byte_end":7211779,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211780,"byte_end":7211783,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211784,"byte_end":7211835,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211836,"byte_end":7211876,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211877,"byte_end":7211951,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211952,"byte_end":7211955,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7211956,"byte_end":7212044,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212045,"byte_end":7212095,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212096,"byte_end":7212148,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212149,"byte_end":7212177,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212178,"byte_end":7212181,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212182,"byte_end":7212214,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212215,"byte_end":7212232,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212233,"byte_end":7212246,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212247,"byte_end":7212256,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212257,"byte_end":7212262,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212263,"byte_end":7212270,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212271,"byte_end":7212274,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212275,"byte_end":7212304,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212305,"byte_end":7212332,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7212333,"byte_end":7212342,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":638},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":8235608,"byte_end":8235611,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":8235562,"byte_end":8235590,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":8235591,"byte_end":8235600,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":640},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":8235736,"byte_end":8235745,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":8235667,"byte_end":8235718,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":8235719,"byte_end":8235728,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":8235855,"byte_end":8235872,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":8235806,"byte_end":8235847,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134150,"byte_end":7134168,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7135346,"byte_end":7135354,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7139107,"byte_end":7139108,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142193,"byte_end":7142199,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142264,"byte_end":7142270,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142286,"byte_end":7142292,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142625,"byte_end":7142631,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":668},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":121},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154745,"byte_end":7154751,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7155098,"byte_end":7155104,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7155392,"byte_end":7155398,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7155745,"byte_end":7155751,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7155863,"byte_end":7155869,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7156264,"byte_end":7156270,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7156373,"byte_end":7156379,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7156499,"byte_end":7156505,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7156854,"byte_end":7156860,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158073,"byte_end":7158078,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158585,"byte_end":7158590,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160240,"byte_end":7160245,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161915,"byte_end":7161920,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7162110,"byte_end":7162115,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7162393,"byte_end":7162398,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7162539,"byte_end":7162544,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7162737,"byte_end":7162742,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7162908,"byte_end":7162913,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163003,"byte_end":7163008,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163481,"byte_end":7163486,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163596,"byte_end":7163601,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163723,"byte_end":7163728,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163834,"byte_end":7163839,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164340,"byte_end":7164346,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164520,"byte_end":7164526,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164581,"byte_end":7164587,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164833,"byte_end":7164839,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165519,"byte_end":7165525,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172817,"byte_end":7172823,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7173386,"byte_end":7173392,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7173519,"byte_end":7173525,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7173599,"byte_end":7173605,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7173770,"byte_end":7173776,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7173924,"byte_end":7173930,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7174233,"byte_end":7174239,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7174430,"byte_end":7174436,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175255,"byte_end":7175264,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175289,"byte_end":7175298,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175320,"byte_end":7175329,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175443,"byte_end":7175452,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175694,"byte_end":7175703,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175901,"byte_end":7175910,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176038,"byte_end":7176047,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176221,"byte_end":7176230,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176341,"byte_end":7176352,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176812,"byte_end":7176823,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176970,"byte_end":7176981,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/deferred.rs","byte_start":7186919,"byte_end":7186927,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/deferred.rs","byte_start":7187051,"byte_end":7187059,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/epoch.rs","byte_start":7190906,"byte_end":7190911,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/epoch.rs","byte_start":7192666,"byte_end":7192677,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195660,"byte_end":7195665,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209183,"byte_end":7209188,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209358,"byte_end":7209363,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7215945,"byte_end":7215948,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7215958,"byte_end":7215961,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7216888,"byte_end":7216891,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7220169,"byte_end":7220172,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7220571,"byte_end":7220574,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7221000,"byte_end":7221009,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7221019,"byte_end":7221028,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7221703,"byte_end":7221709,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7226643,"byte_end":7226648,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7235168,"byte_end":7235173,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":7241161,"byte_end":7241166,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":7241302,"byte_end":7241307,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":7241813,"byte_end":7241817,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":7244369,"byte_end":7244373,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":7244905,"byte_end":7244909,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":7254683,"byte_end":7254688,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":7254725,"byte_end":7254730,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":7254746,"byte_end":7254751,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":7260365,"byte_end":7260370,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7134150,"byte_end":7134168,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7135346,"byte_end":7135354,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":31963},"to":{"krate":0,"index":40}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7139107,"byte_end":7139108,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142193,"byte_end":7142199,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142264,"byte_end":7142270,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142286,"byte_end":7142292,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7142625,"byte_end":7142631,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7154745,"byte_end":7154751,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7155098,"byte_end":7155104,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7155392,"byte_end":7155398,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7155745,"byte_end":7155751,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7155863,"byte_end":7155869,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7156264,"byte_end":7156270,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7156373,"byte_end":7156379,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7156499,"byte_end":7156505,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7156854,"byte_end":7156860,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158073,"byte_end":7158078,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":166},"to":{"krate":0,"index":162}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7158585,"byte_end":7158590,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7160240,"byte_end":7160245,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7161915,"byte_end":7161920,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7162110,"byte_end":7162115,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7162393,"byte_end":7162398,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7162539,"byte_end":7162544,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7162737,"byte_end":7162742,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7162908,"byte_end":7162913,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163003,"byte_end":7163008,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163481,"byte_end":7163486,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1710}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163596,"byte_end":7163601,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1713}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163723,"byte_end":7163728,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7163834,"byte_end":7163839,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1946}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164340,"byte_end":7164346,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164520,"byte_end":7164526,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164581,"byte_end":7164587,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":220},"to":{"krate":0,"index":162}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7164833,"byte_end":7164839,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7165519,"byte_end":7165525,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7172817,"byte_end":7172823,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7173386,"byte_end":7173392,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7173519,"byte_end":7173525,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1765}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7173599,"byte_end":7173605,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7173770,"byte_end":7173776,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1786}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7173924,"byte_end":7173930,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7174233,"byte_end":7174239,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":7174430,"byte_end":7174436,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175255,"byte_end":7175264,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175289,"byte_end":7175298,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175320,"byte_end":7175329,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175443,"byte_end":7175452,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175694,"byte_end":7175703,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7175901,"byte_end":7175910,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176038,"byte_end":7176047,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176221,"byte_end":7176230,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1765}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176341,"byte_end":7176352,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176812,"byte_end":7176823,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":7176970,"byte_end":7176981,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/deferred.rs","byte_start":7186919,"byte_end":7186927,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/deferred.rs","byte_start":7187051,"byte_end":7187059,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/epoch.rs","byte_start":7190906,"byte_end":7190911,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/epoch.rs","byte_start":7192666,"byte_end":7192677,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7195660,"byte_end":7195665,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209183,"byte_end":7209188,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":7209358,"byte_end":7209363,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7215945,"byte_end":7215948,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":417},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7215958,"byte_end":7215961,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7216888,"byte_end":7216891,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":417},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7220169,"byte_end":7220172,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":417},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7220571,"byte_end":7220574,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":417},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7221000,"byte_end":7221009,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7221019,"byte_end":7221028,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7221703,"byte_end":7221709,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7226643,"byte_end":7226648,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":7235168,"byte_end":7235173,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":447},"to":{"krate":0,"index":485}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":7241161,"byte_end":7241166,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":7241302,"byte_end":7241307,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":7241813,"byte_end":7241817,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":7244369,"byte_end":7244373,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":608},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":7244905,"byte_end":7244909,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":7254683,"byte_end":7254688,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":7254725,"byte_end":7254730,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":7254746,"byte_end":7254751,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/waqar/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":7260365,"byte_end":7260370,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":2255}}]}